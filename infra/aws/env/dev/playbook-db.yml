- name: Instalar e configurar o MySQL Server
  hosts: aws_db
  become: true
  vars_files: "./vars.yaml"
    

  tasks:
    - name: Instalar pacotes mysql-server, python e python3-mysqldb
      apt:
        name:
          - mysql-server
          - python3        
          - python3-pip
          - python3-mysqldb
        update_cache: yes
        state: present

    - name: Instala o módulo PyMySQL
      pip:
        name: pymysql
        state: present

    - name: Verificar se o usuário do banco pode fazer login
      mysql_user:        
        name: "{{ mysql_root_user }}"
        password: "{{ mysql_root_password }}"
      register: resultado_login
      failed_when: "'Access denied' in resultado_login"
      changed_when: resultado_login is failed


    - name: Alterar a senha do usuário root
      mysql_user:
        name: "{{ mysql_root_user }}"
        password: "{{ mysql_root_password }}"      
        host: localhost
      failed_when: resultado_login is success
      changed_when: resultado_login is failed
      when: resultado_login is failed

    # - name: Verificar se o usuário existe
    #   mysql_user:
    #     name: "{{ mysql_user }}"
    #     state: present
    #     host: "%"
    #   register: resultado_verificacao

    - name: Criar usuário se não existir
      mysql_user:
        login_user : "{{ mysql_root_user }}"
        login_password : "{{ mysql_root_password }}"
        name: "{{ mysql_user }}"
        update_password: "{{ mysql_password }}"
        host: "%"
        priv:
          '"{{ db_prod }}".*': 'ALL,GRANT'
          '"{{ db_test }}".*': 'ALL,GRANT'

    # - name: Alterar permissões do usuário do MySQL para qualquer IP
    #   become: yes
    #   mysql_user:
    #     name: "{{ mysql_root_user }}"
    #     password: "{{ mysql_root_password }}"
    #     host: '%'
    #     priv: '*.*:ALL'
    #     append_privs: yes

    - name: Criar bancos de dados
      mysql_db:
        name: "{{ item }}"
        state: present
        login_user: "{{ mysql_root_user }}"
        login_password: "{{ mysql_root_password }}"      
      loop:
        - "{{ db_prod }}"
        - "{{ db_test }}"
    
    - name: Garantir privilégios no banco de dados db1
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ db_prod }}.*:ALL"
        state: present

    - name: Garantir privilégios no banco de dados db1
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ db_prod }}.*:ALL"
        state: present

    - name: Atualizar o arquivo de configuração do MySQL
      lineinfile:
        path: "{{ mysql_config_file }}"
        regexp: "^bind-address"
        line: "bind-address = 0.0.0.0"

    - name: Reiniciar o serviço do MySQL
      service:
        name: mysql
        state: restarted
